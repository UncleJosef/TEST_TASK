CREATE PROCEDURE [PLAYER].[SP_GET_TRACK]
	@TYPE INT =1
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @SELECTED_TRACK BIGINT;
	DECLARE @SELECTION INT;
	DECLARE @POWER FLOAT;
	DECLARE @BARRIER FLOAT;
	IF (@TYPE=0)
	BEGIN
		-- Прямой перебор
		SELECT @SELECTED_TRACK=[LAST_TRACK_ID] FROM [PLAYER].[T_STATE] WHERE ID=1;
		SELECT [NAME] FROM [PLAYER].T_TRACKS WHERE ID=@SELECTED_TRACK;
		IF ( @SELECTED_TRACK=(SELECT MAX_TRACK_ID FROM [PLAYER].[T_STATE] WHERE ID=1))
			UPDATE [PLAYER].[T_STATE] SET [LAST_TRACK_ID]=[MIN_TRACK_ID] WHERE ID=1
		ELSE
			UPDATE [PLAYER].[T_STATE] SET [LAST_TRACK_ID]=(SELECT MIN(ID) FROM [PLAYER].[T_TRACKS] WHERE ID>@SELECTED_TRACK) WHERE ID=1
	END
		ELSE IF (@TYPE=1)
	BEGIN
		-- Возвращаем трек
		SELECT @SELECTED_TRACK=[LAST_TRACK_ID], @BARRIER=[BARRIER] FROM [PLAYER].[T_STATE] WHERE ID=1;
		SELECT [NAME] FROM [PLAYER].T_TRACKS WHERE ID=@SELECTED_TRACK;
		-- Определяем какой трек будет играть
		-- Вероятностный метод
		UPDATE [PLAYER].T_TRACK_COUNTER SET [COUNTER]=COUNTER+1 WHERE TRACK_ID=@SELECTED_TRACK;
		SET @POWER=RAND();
		SET @SELECTION=(SELECT MIN(COUNTER) FROM [PLAYER].T_TRACK_COUNTER WHERE TIME=(CASE WHEN (@POWER<=@BARRIER) THEN 5 ELSE 10 END));
		SET @SELECTED_TRACK=(SELECT TOP 1 TRACK_ID FROM [PLAYER].T_TRACK_COUNTER WHERE COUNTER=@SELECTION AND TIME=(CASE WHEN (@POWER<=@BARRIER) THEN 5 ELSE 10 END));
		UPDATE [PLAYER].[T_STATE] SET [LAST_TRACK_ID]=@SELECTED_TRACK;
	END
		ELSE
	BEGIN
		-- Возвращаем трек
		SELECT [NAME] FROM [PLAYER].T_TRACKS WHERE ID=@SELECTED_TRACK;
		-- Если введено неправильное число		
		SELECT @SELECTED_TRACK=MIN(ID) FROM [PLAYER].[T_TRACKS];
	END
	-- Записываем информацию об отданном треке
	INSERT INTO [PLAYER].[T_TRACK_LOG](OPERATION_TYPE_ID, TRACK_ID, CONTENT)
		VALUES(4, @SELECTED_TRACK, N'Выбран трек ID'+CAST(@SELECTED_TRACK AS NVARCHAR(12)));
END
